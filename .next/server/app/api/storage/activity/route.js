"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/storage/activity/route";
exports.ids = ["app/api/storage/activity/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstorage%2Factivity%2Froute&page=%2Fapi%2Fstorage%2Factivity%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstorage%2Factivity%2Froute.ts&appDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstorage%2Factivity%2Froute&page=%2Fapi%2Fstorage%2Factivity%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstorage%2Factivity%2Froute.ts&appDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_rishalbabu_Documents_GitHub_Flavours_app_api_storage_activity_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/storage/activity/route.ts */ \"(rsc)/./app/api/storage/activity/route.ts\");\n\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n// @ts-expect-error - replaced by webpack/turbopack loader\n\nconst AppRouteRouteModule = next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule;\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/api/storage/activity/route\",\n        pathname: \"/api/storage/activity\",\n        filename: \"route\",\n        bundlePath: \"app/api/storage/activity/route\"\n    },\n    resolvedPagePath: \"/Users/rishalbabu/Documents/GitHub/Flavours/app/api/storage/activity/route.ts\",\n    nextConfigOutput,\n    userland: _Users_rishalbabu_Documents_GitHub_Flavours_app_api_storage_activity_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/storage/activity/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdG9yYWdlJTJGYWN0aXZpdHklMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnN0b3JhZ2UlMkZhY3Rpdml0eSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnN0b3JhZ2UlMkZhY3Rpdml0eSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnJpc2hhbGJhYnUlMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZGbGF2b3VycyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZyaXNoYWxiYWJ1JTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGRmxhdm91cnMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDaEQ7QUFDMEY7QUFDM0I7QUFDL0Q7QUFDMEc7QUFDMUcsNEJBQTRCLGdIQUEwQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvP2Q2ODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci9ub2RlLXBvbHlmaWxsLWhlYWRlcnNcIjtcbi8vIEB0cy1pZ25vcmUgdGhpcyBuZWVkIHRvIGJlIGltcG9ydGVkIGZyb20gbmV4dC9kaXN0IHRvIGJlIGV4dGVybmFsXG5pbXBvcnQgKiBhcyBtb2R1bGUgZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbi8vIEB0cy1leHBlY3QtZXJyb3IgLSByZXBsYWNlZCBieSB3ZWJwYWNrL3R1cmJvcGFjayBsb2FkZXJcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvcmlzaGFsYmFidS9Eb2N1bWVudHMvR2l0SHViL0ZsYXZvdXJzL2FwcC9hcGkvc3RvcmFnZS9hY3Rpdml0eS9yb3V0ZS50c1wiO1xuY29uc3QgQXBwUm91dGVSb3V0ZU1vZHVsZSA9IG1vZHVsZS5BcHBSb3V0ZVJvdXRlTW9kdWxlO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3RvcmFnZS9hY3Rpdml0eS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N0b3JhZ2UvYWN0aXZpdHlcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3N0b3JhZ2UvYWN0aXZpdHkvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvcmlzaGFsYmFidS9Eb2N1bWVudHMvR2l0SHViL0ZsYXZvdXJzL2FwcC9hcGkvc3RvcmFnZS9hY3Rpdml0eS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zdG9yYWdlL2FjdGl2aXR5L3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstorage%2Factivity%2Froute&page=%2Fapi%2Fstorage%2Factivity%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstorage%2Factivity%2Froute.ts&appDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/storage/activity/route.ts":
/*!*******************************************!*\
  !*** ./app/api/storage/activity/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_storage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/storage-service */ \"(rsc)/./lib/storage-service.ts\");\n\n\n/**\n * GET /api/storage/activity - Get user activity logs\n */ async function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const username = searchParams.get(\"username\");\n        const logType = searchParams.get(\"type\");\n        const limit = parseInt(searchParams.get(\"limit\") || \"100\");\n        if (!username) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Username is required\"\n            }, {\n                status: 400\n            });\n        }\n        const activityLogs = await _lib_storage_service__WEBPACK_IMPORTED_MODULE_1__.storageService.getActivityLogs(username, logType || undefined);\n        // Apply limit\n        const limitedLogs = activityLogs.slice(0, limit);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            data: {\n                logs: limitedLogs,\n                total: activityLogs.length,\n                returned: limitedLogs.length\n            }\n        });\n    } catch (error) {\n        console.error(\"Activity retrieval error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to retrieve activity logs\"\n        }, {\n            status: 500\n        });\n    }\n}\n/**\n * POST /api/storage/activity - Log user activity\n */ async function POST(request) {\n    try {\n        const { username, type, details, metadata } = await request.json();\n        if (!username || !type || !details) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Username, type, and details are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate activity type\n        const validTypes = [\n            \"login\",\n            \"logout\",\n            \"content_upload\",\n            \"content_delete\",\n            \"like\",\n            \"comment\",\n            \"subscription\",\n            \"purchase\",\n            \"interaction\"\n        ];\n        if (!validTypes.includes(type)) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Invalid activity type\"\n            }, {\n                status: 400\n            });\n        }\n        await _lib_storage_service__WEBPACK_IMPORTED_MODULE_1__.storageService.logActivity(username, type, details, metadata);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: \"Activity logged successfully\"\n        });\n    } catch (error) {\n        console.error(\"Activity logging error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to log activity\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3N0b3JhZ2UvYWN0aXZpdHkvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1RDtBQUNEO0FBRXREOztDQUVDLEdBQ00sZUFBZUUsSUFBSUMsT0FBb0I7SUFDNUMsSUFBSTtRQUNGLE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUcsSUFBSUMsSUFBSUYsUUFBUUcsR0FBRztRQUM1QyxNQUFNQyxXQUFXSCxhQUFhSSxHQUFHLENBQUM7UUFDbEMsTUFBTUMsVUFBVUwsYUFBYUksR0FBRyxDQUFDO1FBQ2pDLE1BQU1FLFFBQVFDLFNBQVNQLGFBQWFJLEdBQUcsQ0FBQyxZQUFZO1FBRXBELElBQUksQ0FBQ0QsVUFBVTtZQUNiLE9BQU9QLGtGQUFZQSxDQUFDWSxJQUFJLENBQ3RCO2dCQUFFQyxPQUFPO1lBQXVCLEdBQ2hDO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSxNQUFNQyxlQUFlLE1BQU1kLGdFQUFjQSxDQUFDZSxlQUFlLENBQUNULFVBQVVFLFdBQVdRO1FBRS9FLGNBQWM7UUFDZCxNQUFNQyxjQUFjSCxhQUFhSSxLQUFLLENBQUMsR0FBR1Q7UUFFMUMsT0FBT1Ysa0ZBQVlBLENBQUNZLElBQUksQ0FBQztZQUN2QlEsU0FBUztZQUNUQyxNQUFNO2dCQUNKQyxNQUFNSjtnQkFDTkssT0FBT1IsYUFBYVMsTUFBTTtnQkFDMUJDLFVBQVVQLFlBQVlNLE1BQU07WUFDOUI7UUFDRjtJQUNGLEVBQUUsT0FBT1gsT0FBTztRQUNkYSxRQUFRYixLQUFLLENBQUMsNkJBQTZCQTtRQUMzQyxPQUFPYixrRkFBWUEsQ0FBQ1ksSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQW1DLEdBQzVDO1lBQUVDLFFBQVE7UUFBSTtJQUVsQjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxlQUFlYSxLQUFLeEIsT0FBb0I7SUFDN0MsSUFBSTtRQUNGLE1BQU0sRUFBRUksUUFBUSxFQUFFcUIsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsRUFBRSxHQUFHLE1BQU0zQixRQUFRUyxJQUFJO1FBRWhFLElBQUksQ0FBQ0wsWUFBWSxDQUFDcUIsUUFBUSxDQUFDQyxTQUFTO1lBQ2xDLE9BQU83QixrRkFBWUEsQ0FBQ1ksSUFBSSxDQUN0QjtnQkFBRUMsT0FBTztZQUEyQyxHQUNwRDtnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEseUJBQXlCO1FBQ3pCLE1BQU1pQixhQUFhO1lBQ2pCO1lBQVM7WUFBVTtZQUFrQjtZQUNyQztZQUFRO1lBQVc7WUFBZ0I7WUFBWTtTQUNoRDtRQUVELElBQUksQ0FBQ0EsV0FBV0MsUUFBUSxDQUFDSixPQUFPO1lBQzlCLE9BQU81QixrRkFBWUEsQ0FBQ1ksSUFBSSxDQUN0QjtnQkFBRUMsT0FBTztZQUF3QixHQUNqQztnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEsTUFBTWIsZ0VBQWNBLENBQUNnQyxXQUFXLENBQUMxQixVQUFVcUIsTUFBTUMsU0FBU0M7UUFFMUQsT0FBTzlCLGtGQUFZQSxDQUFDWSxJQUFJLENBQUM7WUFDdkJRLFNBQVM7WUFDVGMsU0FBUztRQUNYO0lBQ0YsRUFBRSxPQUFPckIsT0FBTztRQUNkYSxRQUFRYixLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPYixrRkFBWUEsQ0FBQ1ksSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQXlCLEdBQ2xDO1lBQUVDLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vYXBwL2FwaS9zdG9yYWdlL2FjdGl2aXR5L3JvdXRlLnRzP2FlYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgc3RvcmFnZVNlcnZpY2UgfSBmcm9tICdAL2xpYi9zdG9yYWdlLXNlcnZpY2UnXG5cbi8qKlxuICogR0VUIC9hcGkvc3RvcmFnZS9hY3Rpdml0eSAtIEdldCB1c2VyIGFjdGl2aXR5IGxvZ3NcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKVxuICAgIGNvbnN0IHVzZXJuYW1lID0gc2VhcmNoUGFyYW1zLmdldCgndXNlcm5hbWUnKVxuICAgIGNvbnN0IGxvZ1R5cGUgPSBzZWFyY2hQYXJhbXMuZ2V0KCd0eXBlJylcbiAgICBjb25zdCBsaW1pdCA9IHBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoJ2xpbWl0JykgfHwgJzEwMCcpXG5cbiAgICBpZiAoIXVzZXJuYW1lKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdVc2VybmFtZSBpcyByZXF1aXJlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApXG4gICAgfVxuXG4gICAgY29uc3QgYWN0aXZpdHlMb2dzID0gYXdhaXQgc3RvcmFnZVNlcnZpY2UuZ2V0QWN0aXZpdHlMb2dzKHVzZXJuYW1lLCBsb2dUeXBlIHx8IHVuZGVmaW5lZClcbiAgICBcbiAgICAvLyBBcHBseSBsaW1pdFxuICAgIGNvbnN0IGxpbWl0ZWRMb2dzID0gYWN0aXZpdHlMb2dzLnNsaWNlKDAsIGxpbWl0KVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiB7IFxuICAgICAgICBsb2dzOiBsaW1pdGVkTG9ncyxcbiAgICAgICAgdG90YWw6IGFjdGl2aXR5TG9ncy5sZW5ndGgsXG4gICAgICAgIHJldHVybmVkOiBsaW1pdGVkTG9ncy5sZW5ndGhcbiAgICAgIH1cbiAgICB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0FjdGl2aXR5IHJldHJpZXZhbCBlcnJvcjonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIHJldHJpZXZlIGFjdGl2aXR5IGxvZ3MnIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApXG4gIH1cbn1cblxuLyoqXG4gKiBQT1NUIC9hcGkvc3RvcmFnZS9hY3Rpdml0eSAtIExvZyB1c2VyIGFjdGl2aXR5XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB1c2VybmFtZSwgdHlwZSwgZGV0YWlscywgbWV0YWRhdGEgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXG5cbiAgICBpZiAoIXVzZXJuYW1lIHx8ICF0eXBlIHx8ICFkZXRhaWxzKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdVc2VybmFtZSwgdHlwZSwgYW5kIGRldGFpbHMgYXJlIHJlcXVpcmVkJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICAvLyBWYWxpZGF0ZSBhY3Rpdml0eSB0eXBlXG4gICAgY29uc3QgdmFsaWRUeXBlcyA9IFtcbiAgICAgICdsb2dpbicsICdsb2dvdXQnLCAnY29udGVudF91cGxvYWQnLCAnY29udGVudF9kZWxldGUnLCBcbiAgICAgICdsaWtlJywgJ2NvbW1lbnQnLCAnc3Vic2NyaXB0aW9uJywgJ3B1cmNoYXNlJywgJ2ludGVyYWN0aW9uJ1xuICAgIF1cblxuICAgIGlmICghdmFsaWRUeXBlcy5pbmNsdWRlcyh0eXBlKSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnSW52YWxpZCBhY3Rpdml0eSB0eXBlJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICBhd2FpdCBzdG9yYWdlU2VydmljZS5sb2dBY3Rpdml0eSh1c2VybmFtZSwgdHlwZSwgZGV0YWlscywgbWV0YWRhdGEpXG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdBY3Rpdml0eSBsb2dnZWQgc3VjY2Vzc2Z1bGx5J1xuICAgIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQWN0aXZpdHkgbG9nZ2luZyBlcnJvcjonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIGxvZyBhY3Rpdml0eScgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgIClcbiAgfVxufVxuXG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwic3RvcmFnZVNlcnZpY2UiLCJHRVQiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwidXNlcm5hbWUiLCJnZXQiLCJsb2dUeXBlIiwibGltaXQiLCJwYXJzZUludCIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsImFjdGl2aXR5TG9ncyIsImdldEFjdGl2aXR5TG9ncyIsInVuZGVmaW5lZCIsImxpbWl0ZWRMb2dzIiwic2xpY2UiLCJzdWNjZXNzIiwiZGF0YSIsImxvZ3MiLCJ0b3RhbCIsImxlbmd0aCIsInJldHVybmVkIiwiY29uc29sZSIsIlBPU1QiLCJ0eXBlIiwiZGV0YWlscyIsIm1ldGFkYXRhIiwidmFsaWRUeXBlcyIsImluY2x1ZGVzIiwibG9nQWN0aXZpdHkiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/storage/activity/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/storage-service.ts":
/*!********************************!*\
  !*** ./lib/storage-service.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   storageService: () => (/* binding */ storageService)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist-node/v4.js\");\n\n\n\n// Storage configuration\nconst STORAGE_ROOT = process.env.STORAGE_ROOT || \"./storage\";\nconst USERS_DIR = path__WEBPACK_IMPORTED_MODULE_1___default().join(STORAGE_ROOT, \"users\");\nclass StorageService {\n    constructor(){\n        this.initialized = false;\n        this.initializeStorage();\n    }\n    /**\n   * Initialize storage directories\n   */ async initializeStorage() {\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(STORAGE_ROOT, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(USERS_DIR, {\n                recursive: true\n            });\n            this.initialized = true;\n            console.log(\"Storage service initialized successfully\");\n        } catch (error) {\n            console.error(\"Failed to initialize storage:\", error);\n            throw new Error(\"Storage initialization failed\");\n        }\n    }\n    /**\n   * Create user folder structure\n   */ async createUserFolders(username) {\n        if (!this.initialized) {\n            await this.initializeStorage();\n        }\n        const sanitizedUsername = this.sanitizeUsername(username);\n        const userRootPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(USERS_DIR, sanitizedUsername);\n        const folderStructure = {\n            username: sanitizedUsername,\n            rootPath: userRootPath,\n            contentPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\"),\n            activityPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"activity\"),\n            imagesPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\", \"images\"),\n            videosPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\", \"videos\"),\n            postsPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\", \"posts\"),\n            paymentsPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"payments\"),\n            analyticsPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"analytics\")\n        };\n        try {\n            // Create all directories\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(folderStructure.contentPath, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(folderStructure.activityPath, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(folderStructure.imagesPath, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(folderStructure.videosPath, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(folderStructure.postsPath, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(folderStructure.paymentsPath, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(folderStructure.analyticsPath, {\n                recursive: true\n            });\n            // Create initial activity log files\n            await this.createInitialActivityLogs(folderStructure.activityPath);\n            // Create .gitkeep files to ensure directories are tracked\n            await this.createGitkeepFiles(folderStructure);\n            console.log(`User folders created for ${sanitizedUsername}`);\n            return folderStructure;\n        } catch (error) {\n            console.error(`Failed to create user folders for ${sanitizedUsername}:`, error);\n            throw new Error(\"User folder creation failed\");\n        }\n    }\n    /**\n   * Sanitize username for filesystem safety\n   */ sanitizeUsername(username) {\n        return username.replace(/[^a-zA-Z0-9_-]/g, \"_\").replace(/^[^a-zA-Z]/, \"user_\").toLowerCase();\n    }\n    /**\n   * Create initial activity log files\n   */ async createInitialActivityLogs(activityPath) {\n        const initialLogs = {\n            logins: [],\n            interactions: [],\n            subscriptions: [],\n            content_uploads: [],\n            payments: []\n        };\n        for (const [filename, data] of Object.entries(initialLogs)){\n            const filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(activityPath, `${filename}.json`);\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(filePath, JSON.stringify(data, null, 2));\n        }\n    }\n    /**\n   * Create .gitkeep files to ensure directories are tracked\n   */ async createGitkeepFiles(structure) {\n        const directories = [\n            structure.contentPath,\n            structure.activityPath,\n            structure.imagesPath,\n            structure.videosPath,\n            structure.postsPath,\n            structure.paymentsPath,\n            structure.analyticsPath\n        ];\n        for (const dir of directories){\n            const gitkeepPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(dir, \".gitkeep\");\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(gitkeepPath, \"# This file ensures the directory is tracked by git\\n\");\n        }\n    }\n    /**\n   * Get user folder structure\n   */ async getUserFolders(username) {\n        const sanitizedUsername = this.sanitizeUsername(username);\n        const userRootPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(USERS_DIR, sanitizedUsername);\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.access(userRootPath);\n            return {\n                username: sanitizedUsername,\n                rootPath: userRootPath,\n                contentPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\"),\n                activityPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"activity\"),\n                imagesPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\", \"images\"),\n                videosPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\", \"videos\"),\n                postsPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"content\", \"posts\"),\n                paymentsPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"payments\"),\n                analyticsPath: path__WEBPACK_IMPORTED_MODULE_1___default().join(userRootPath, \"analytics\")\n            };\n        } catch (error) {\n            return null;\n        }\n    }\n    /**\n   * Log user activity\n   */ async logActivity(username, type, details, metadata) {\n        const folders = await this.getUserFolders(username);\n        if (!folders) {\n            throw new Error(\"User folders not found\");\n        }\n        const logEntry = {\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n            timestamp: new Date().toISOString(),\n            type,\n            details,\n            metadata\n        };\n        // Determine which log file to update\n        let logFile = \"interactions.json\";\n        switch(type){\n            case \"login\":\n            case \"logout\":\n                logFile = \"logins.json\";\n                break;\n            case \"subscription\":\n                logFile = \"subscriptions.json\";\n                break;\n            case \"content_upload\":\n                logFile = \"content_uploads.json\";\n                break;\n            case \"purchase\":\n                logFile = \"payments.json\";\n                break;\n            default:\n                logFile = \"interactions.json\";\n        }\n        const logPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(folders.activityPath, logFile);\n        try {\n            const existingLogs = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(logPath, \"utf-8\");\n            const logs = JSON.parse(existingLogs);\n            logs.push(logEntry);\n            // Keep only last 1000 entries to prevent file bloat\n            if (logs.length > 1000) {\n                logs.splice(0, logs.length - 1000);\n            }\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(logPath, JSON.stringify(logs, null, 2));\n        } catch (error) {\n            console.error(\"Failed to log activity:\", error);\n            throw new Error(\"Activity logging failed\");\n        }\n    }\n    /**\n   * Store content file\n   */ async storeContent(username, file, originalName, mimeType, contentType) {\n        const folders = await this.getUserFolders(username);\n        if (!folders) {\n            throw new Error(\"User folders not found\");\n        }\n        const fileId = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n        const extension = path__WEBPACK_IMPORTED_MODULE_1___default().extname(originalName);\n        const filename = `${fileId}${extension}`;\n        let targetPath;\n        switch(contentType){\n            case \"image\":\n                targetPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(folders.imagesPath, filename);\n                break;\n            case \"video\":\n                targetPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(folders.videosPath, filename);\n                break;\n            case \"post\":\n                targetPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(folders.postsPath, filename);\n                break;\n            default:\n                throw new Error(\"Invalid content type\");\n        }\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(targetPath, file);\n            const contentFile = {\n                id: fileId,\n                filename,\n                originalName,\n                mimeType,\n                size: file.length,\n                path: targetPath,\n                uploadedAt: new Date().toISOString()\n            };\n            // Log the content upload\n            await this.logActivity(username, \"content_upload\", {\n                fileId,\n                originalName,\n                mimeType,\n                size: file.length,\n                contentType\n            });\n            return contentFile;\n        } catch (error) {\n            console.error(\"Failed to store content:\", error);\n            throw new Error(\"Content storage failed\");\n        }\n    }\n    /**\n   * Get user activity logs\n   */ async getActivityLogs(username, logType) {\n        const folders = await this.getUserFolders(username);\n        if (!folders) {\n            // Return empty array instead of throwing error for better UX\n            return [];\n        }\n        const logFiles = logType ? [\n            `${logType}.json`\n        ] : [\n            \"logins.json\",\n            \"interactions.json\",\n            \"subscriptions.json\",\n            \"content_uploads.json\",\n            \"payments.json\"\n        ];\n        const allLogs = [];\n        for (const logFile of logFiles){\n            try {\n                const logPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(folders.activityPath, logFile);\n                const logData = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(logPath, \"utf-8\");\n                const logs = JSON.parse(logData);\n                allLogs.push(...logs);\n            } catch (error) {\n                // Log file might not exist yet, continue\n                console.warn(`Log file ${logFile} not found for user ${username}`);\n            }\n        }\n        // Sort by timestamp (newest first)\n        return allLogs.sort((a, b)=>new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n    }\n    /**\n   * Get user content files\n   */ async getContentFiles(username, contentType) {\n        const folders = await this.getUserFolders(username);\n        if (!folders) {\n            // Return empty array instead of throwing error for better UX\n            return [];\n        }\n        const contentPaths = contentType ? [\n            folders[`${contentType}sPath`]\n        ] : [\n            folders.imagesPath,\n            folders.videosPath,\n            folders.postsPath\n        ];\n        const allFiles = [];\n        for (const contentPath of contentPaths){\n            try {\n                const files = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readdir(contentPath);\n                for (const file of files){\n                    if (file === \".gitkeep\") continue;\n                    const filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(contentPath, file);\n                    const stats = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.stat(filePath);\n                    allFiles.push({\n                        id: path__WEBPACK_IMPORTED_MODULE_1___default().parse(file).name,\n                        filename: file,\n                        originalName: file,\n                        mimeType: \"application/octet-stream\",\n                        size: stats.size,\n                        path: filePath,\n                        uploadedAt: stats.birthtime.toISOString()\n                    });\n                }\n            } catch (error) {\n                console.warn(`Failed to read content directory ${contentPath}:`, error);\n            }\n        }\n        return allFiles.sort((a, b)=>new Date(b.uploadedAt).getTime() - new Date(a.uploadedAt).getTime());\n    }\n    /**\n   * Delete user content\n   */ async deleteContent(username, fileId) {\n        const folders = await this.getUserFolders(username);\n        if (!folders) {\n            throw new Error(\"User folders not found\");\n        }\n        const contentFiles = await this.getContentFiles(username);\n        const fileToDelete = contentFiles.find((file)=>file.id === fileId);\n        if (!fileToDelete) {\n            throw new Error(\"Content file not found\");\n        }\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.unlink(fileToDelete.path);\n            // Log the deletion\n            await this.logActivity(username, \"content_delete\", {\n                fileId,\n                filename: fileToDelete.filename,\n                originalName: fileToDelete.originalName\n            });\n        } catch (error) {\n            console.error(\"Failed to delete content:\", error);\n            throw new Error(\"Content deletion failed\");\n        }\n    }\n    /**\n   * Get storage statistics for a user\n   */ async getUserStorageStats(username) {\n        const folders = await this.getUserFolders(username);\n        if (!folders) {\n            // Return default stats instead of throwing error for better UX\n            return {\n                totalFiles: 0,\n                totalSize: 0,\n                contentBreakdown: {\n                    images: 0,\n                    videos: 0,\n                    posts: 0\n                },\n                activityLogs: 0\n            };\n        }\n        const contentFiles = await this.getContentFiles(username);\n        const activityLogs = await this.getActivityLogs(username);\n        const stats = {\n            totalFiles: contentFiles.length,\n            totalSize: contentFiles.reduce((sum, file)=>sum + file.size, 0),\n            contentBreakdown: {\n                images: contentFiles.filter((f)=>f.path.includes(\"images\")).length,\n                videos: contentFiles.filter((f)=>f.path.includes(\"videos\")).length,\n                posts: contentFiles.filter((f)=>f.path.includes(\"posts\")).length\n            },\n            activityLogs: activityLogs.length\n        };\n        return stats;\n    }\n    /**\n   * Clean up user data (for account deletion)\n   */ async deleteUserData(username) {\n        const sanitizedUsername = this.sanitizeUsername(username);\n        const userRootPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(USERS_DIR, sanitizedUsername);\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_0__.promises.rm(userRootPath, {\n                recursive: true,\n                force: true\n            });\n            console.log(`User data deleted for ${sanitizedUsername}`);\n        } catch (error) {\n            console.error(`Failed to delete user data for ${sanitizedUsername}:`, error);\n            throw new Error(\"User data deletion failed\");\n        }\n    }\n}\n// Export singleton instance\nconst storageService = new StorageService();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (storageService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/storage-service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstorage%2Factivity%2Froute&page=%2Fapi%2Fstorage%2Factivity%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstorage%2Factivity%2Froute.ts&appDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frishalbabu%2FDocuments%2FGitHub%2FFlavours&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();